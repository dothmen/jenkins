package pages;

import java.io.FileOutputStream;
import java.io.IOException;

import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import stepsDefinition.Hooks;

public class ExtractionFiltrePage {

	WebDriver driver = Hooks.driver;

	public ExtractionFiltrePage(WebDriver driver) {
		this.driver = driver;
	}

	public void extractDataFromWebTable() {
		WebElement table = driver.findElement(By.cssSelector("#pr_id_61-table"));

		try (Workbook workbook = new XSSFWorkbook()) {
			Sheet sheet = workbook.createSheet("TableData");

			java.util.List<WebElement> rows = table.findElements(By.xpath(
					"/html[1]/body[1]/app-root[1]/app-admin[1]/app-sessiondetails[1]/div[1]/p-tabview[1]/div[1]/div[2]/p-tabpanel[3]/div[1]/p-table[1]/div[1]/div[2]/table[1]/thead[1]/tr[1]"));
			int rowNum = 0;

			for (WebElement row : rows) {
				Row excelRow = sheet.createRow(rowNum++);
				java.util.List<WebElement> cols = row.findElements(By.xpath(
						"//body[1]/app-root[1]/app-admin[1]/app-sessiondetails[1]/div[1]/p-tabview[1]/div[1]/div[2]/p-tabpanel[3]/div[1]/p-table[1]/div[1]/div[2]/table[1]/thead[1]/tr[1]/th[1]"));
				int colNum = 0;

				for (WebElement col : cols) {
					Cell cell = excelRow.createCell(colNum++);
					cell.setCellValue(col.getText());
				}
			}

			try (FileOutputStream outputStream = new FileOutputStream("TableData.xlsx")) {
				workbook.write(outputStream);
			}

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}